'use strict' //строгий режим

// Цикл while в JavaScript
// Давайте для примера последовательно выведем с помощью цикла while числа от одного до пяти:

// let i = 1; // задаем какую-нибудь переменную

// while (i <= 5) {
// 	console.log(i); // выводим содержимое i в консоль
// 	i++; // увеличиваем i на единицу при каждом проходе цикла
// }

// Переменная i называется счетчиком цикла. Счетчики используются для того, чтобы подсчитывать, сколько раз выполнился цикл. Кроме того, они выполняют вспомогательную роль - в нашей задаче мы использовали счетчик, чтобы вывести цифры от 1 до 5.
// Для счетчиков принято использовать буквы i, j и k.
// Каждый проход цикла называется >итерацией цикла. Можно сказать, что мы увеличиваем переменную i на единицу в каждой итерации цикла.

// Задача 1
// Выведите в консоль числа от 1 до 100
// let i = 1;
// while (i <= 100){
// 	console.log(i);
// 	i++
// }

// Задача 2
// Выведите в консоль числа от 11 до 33.
// let i = 11;
// while (i <= 33){
// 	console.log(i);
// 	i++
// }

// Более сложный цикл
// К счетчику не обязательно прибавлять единицу. Давайте для примера выведем столбец четных чисел от 2 до 10. Для этого начальное значение переменной i зададим как 2 и будем прибавлять двойку:
// let i = 2;
// while (i <= 10) {
// 	console.log(i);
// 	i += 2;
// }

// Задача 3
// Выведите в консоль четные числа в промежутке от 0 до 100.
// let i = 0;
// while (i <= 100){
// 	console.log(i);
// 	i +=2;
// }

// Задача 4
// Выведите в консоль нечетные числа в промежутке от 1 до 99.
// let i = 1;
// while (i <= 99){
// 	console.log(i);
// 	i +=3
// }

// Обратный отсчет
// Счетчик не обязательно должен увеличиваться в цикле. Бывают и обратные ситуации, когда счетчик, наоборот, уменьшается.
// Давайте для примера выведем столбец чисел от 10 до 1:
// let i = 10; // начальное значение 10
// while (i >= 1) { // пока i больше 1
// 	console.log(i);
// 	i--; // уменьшаем i на единицу
// }

// Задача 5
// Выведите в консоль числа от 30 до 0
// let i = 30;
// while (i >= 0){
// 	console.log(i);
// 	i--
// }

